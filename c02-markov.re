= マルコフ連鎖による文章生成

== マルコフ連鎖とは

マルコフ連鎖とは、物理や統計、強化学習など様々な分野において事象をモデル化するためにしばしば用いられる確率論の考え方の一種です。

この本ではマルコフ連鎖について詳しく踏み込むことはしませんが、ざっくりとその性質を説明すると、ある事象についてその未来を考えるとき、「その事象の未来は過去に関わりなく、現在の状態のみによって定まる」という特性を持つときの未来予測に用いられるアルゴリズムです。

この後で具体的に例を挙げて解説しますが、hsm_aiではこのような理論を応用することで日本語らしい文章を機械生成しています。

== マルコフ連鎖による文章生成アルゴリズム

hsm_aiの文章生成アルゴリズムについて、実際に例を挙げながら機械的に文章が生成される過程を追っていきましょう。

まず、学習元になる複数の文章を用意します。例として、以下の2つの文を用意しました。

//blankline 
//noindent
ここにりんごがあります。@<br>{}
その箱にはぶどうが2つ入っています。
//blankline

この文章をマルコフ連鎖するために、まずは下準備として、それぞれの文から3つの連続する単語をひとまとめにしたブロックを作ります。ここでポイントになるのは、各文章のはじめとおわりにそれぞれ「ここが文のはじまり(おわり)です」という目印をつけることです。はじめとおわりを表す印として「*」という記号を使うことにすると、ブロックは以下のように生成されます。

//blankline
//noindent
[*, ここ, に], [ここ, に, りんご], [に, りんご, が], ... , [*, その, 箱], [その, 箱, に], [箱, に, は], [に, は, ぶどう], ...
//blankline

[]の中に、3つの連続する単語をコンマ区切りで並べています。hsm_aiの文章生成には、プログラムにより生成された何千、何万もの単語ブロックが使われています。

さて、このブロックから文章を生成するためにマルコフ連鎖というものを使います。
条件に合うブロックを探し、その中からランダムに1つを選び次々とつなげることで文章を生成します。具体的に上のブロックを使ってマルコフ連鎖によって文章が生成される過程を追ってみましょう。

まず、文章のはじめは「*」としてありました。なので、「*」からはじまるブロックを探します。
[*, ここ, に], [*, その, 箱]の2種類です。

この3つの中から、ランダムに1つを選びます。今回は[*, ここ, に]を選んだとします。

次に、[*, ここ, に]につながるブロックを探します。つまり、「に」からはじまるブロックを選べば良いというわけです。
ここでは、[に, りんご, が], [に, は, ぶどう]の2つが考えられます。

この2つの中から、ランダムに1つを選びます。次は[に, は, ぶどう]が選ばれたとします。

こうして、[*, ここ, に], [に, は, ぶどう]という2つの接続可能なブロックが選ばれました。これを「*」で終わるブロックに到達するまで続けます。このように単語を並び替えることで、「ここにりんごがあります。」,「その箱にはぶどうが2つ入っています。」という2つの文から、新しく「ここにはぶどうが2つ入っています。」という意味の違う文章を生成することができます。これが、マルコフ連鎖による文章生成です。

== 形態素解析エンジンMeCab

さて、マルコフ連鎖による文章生成アルゴリズムについてはなんとなくイメージを掴んでもらえたかと思います。しかし、先ほど登場した「分かち書き」という処理をプログラミングで実現するにはどうすればいいでしょうか？
3つの単語をブロックにして連鎖させる…といった箇所については、ある程度プログラミングの経験がある人であれば愚直にコードに起こすことができるでしょう。ですが、ある文章を単語ごとに分割してその品詞を特定する、という処理はどうやって書けばいいのでしょうか？おそらく、それを実現するには膨大な時間と研究が必要です。

そこで役に立つのが形態素解析エンジンMeCab@<fn>{MeCab}です。
//footnote[MeCab][http://taku910.github.io/mecab/]

MeCabは、京都大学とNTT株式会社の共同研究プロジェクトによって開発された形態素解析エンジンです。形態素解析というのは、日本語や英語など、私達が普段から使う言語（自然言語）の文を単語に分割し、その品詞などを判別する解析作業のことを指します。

MeCabを使用することで、文章を簡単に形態素解析し分かち書きされた状態にすることができます。
MeCabはGitHub上で公開されているオープンソースソフトウェアなので、Gitが導入されている環境であればリポジトリ@<fn>{mecab-github}をcloneしビルドすることですぐ使えるようになります。
//footnote[mecab-github][https://github.com/taku910/mecab]

//cmd{
  $ git clone https://github.com/taku910/mecab.git
  $ cd mecab/mecab
  $ ./configure --with-charset=utf8
  # make install
  $ cd ../mecab-ipadic
  $ ./configure --with-charset=utf8
  # make install
//}

以上の手順で、MeCab本体とMeCabを動かすための辞書データをインストールします。また、必要に応じて、新語やネット用語などに特化した辞書データであるmecab-ipadic-neologd@<fn>{neologd}も追加で導入します。
//footnote[neologd][https://github.com/neologd/mecab-ipadic-neologd]

ここまでできたら、MeCabを実際に動かしてみます。コマンド上で`mecab`コマンドを実行し、続けて好きな文章を入力することで動作を確認することができます。

また、MeCabは各種プログラミング言語からスムーズに使用するためのバインディングを標準で提供しています（Perl, Ruby, Python, Java, C#）。
その他、MeCabをより快適に利用するためのライブラリも各種言語で充実しています。例えば、RubyではnattoというGemが配布されており、hsm_aiはnattoを採用しています。

== MongoDBによるブロックデータの格納

hsm_aiでは、予めTwitterが公式に提供している全ツイート履歴のjsonデータを読み込み形態素解析をし、3単語ずつのブロックにしたものをMongoDBに格納しています。
格納されているツイート数は10万を超え、形態素解析やブロック化にも非常に長い時間を要するため、処理済みのデータをデータベースに格納しておくことでレスポンスタイムの短縮を図っています。

MongoDB@<fn>{mongodb}はNoSQL(Not only SQL)の一種で、JSONの保存に適しています。NoSQLの中では最有力であり、PythonやRubyを始めとする多くの言語でMongoDBを利用するためのライブラリが公開されています。
//footnote[mongodb][https://www.mongodb.com]

今回は、MongoDBを使って10万件のツイートから生成された単語のブロック（配列）をhsm_aiというデータベース中のblocksというコレクションに格納していきます。
mongo Gemを使いMongoDBに接続した後、insert_oneメソッドを使い生成したブロックを随時コレクションに格納します。格納したデータはドキュメントと呼ばれ、findメソッドを用いることで取得することができます。

取得したドキュメントの集合はビューという形式で返却され、ビューに対してeachメソッドを用いることで個々のドキュメントを参照できます。
また、ドキュメントに対して[:block]のようにハッシュの要素を取得する操作を行うことで中のデータが得られます。

== Twitterのbotとしてリリースする

さて、理論を抑えたところで、実際に生成した文をTwitterに投稿してみます。

ツイートやいいねなどをプログラムから行うには、Twitterが公式に提供しているAPIを使います。APIとはApplication Program Interfaceの略で、プログラムから何らかのアプリケーションを利用するための決まった形式のことを指します。具体的には、今回使うTwitterAPIの他にもGoogleの提供するGoogle Maps APIやMicrosoftの提供するFace APIなど、様々なものがあります。
このようなAPIを利用することで、プログラミングを始めたての初心者でも既存のサービスの機能をプログラムから利用したり、顔認識や機械学習などの複雑な処理を自分で実装することなく自分のプログラムに組み込むことができます。

今回は、自動ツイートを実現するためにTwitterAPIを使います。TwitterAPIの利用にはTwitter開発者登録が必要です。Twitterのデベロッパー向けページにアクセスし、開発者として認証してもらうために数点の質問に答えます。
開発者として認証されると、プログラムからTwitterAPIを利用するために必要なトークンが発行されるので、それを使ってTwitterAPIを利用するプログラムを書きます。

TwitterAPIの利用の仕方については、インターネットで検索するとたくさんヒットするのでここでは割愛しますが、多くのプログラミング言語ではTwitterAPIを簡単に利用するためのライブラリが公開されています。

//blankline
//blankline

このようにして作られたのが、現在Twitter上で動作しているhsm_aiです。ソースコードはGitHub@<fn>{hsm_ai-github}上で公開しているので、興味がある人は参考にしてみると良いかもしれません。
//footnote[hsm_ai-github][https://github.com/hsm-hx/hsm_ai]

//blankline

==[column] 2017年6月~10月のhsm_ai

//quote{
  これで『信者欲しい』を歌ってみた。 (2017/09)
//}

//quote{
  それは結構ロマンあるよ！！！！！！！！！！！！！ (2017/08)
//}

//quote{
  （プロコン予算で外付けグラボ積んでる (2017/08)
//}

//quote{
  しかしながらサンダルフォンは承認欲求オタクやね (2017/09)
//}

//quote{
  ねえ誰か一緒にカラオケ行こ (2017/10)
//}

//quote{
  あーーーー死にたいはさすがに草ヘルシー志向かよ馬鹿 (2017/07)
//}

//quote{
  ﾄﾞｫﾝ…（雷） (2017/06)
//}

//quote{
  明日宇部線が止まって電車勢来れないのになんで授業するの (2017/06)
//}

//quote{
  眠いな…私の好みなノリでなんかしよ（不摂生） (2017/08)
//}

//quote{
  う～～～ん！！！！！（サンダルフォンすこすこ (2017/10)
//}

//quote{
  はすみくん圧倒的運命力 (2017/07)
//}

//quote{
  オレンジジューーーーーーーースくそうまい (2017/07)
//}

//quote{
  サンダルフォンがしゃべってるオホホw (2017/10)
//}

//quote{
//}
